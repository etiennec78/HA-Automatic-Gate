#################### configuration.yaml ####################
# Sensors used for automations.yaml, frontend.yaml, and ESP32-gate.yaml
# Please add every sensor through the frontend, as yaml files are being replaced by GUIs
# Replace user0, user1, user2 with your real names

# See https://www.home-assistant.io/integrations/group/#notify-groups
notify:
  platform: group
  name: "All devices"
  services:
    - service: mobile_app_user0_phone
    - service: mobile_app_user1_phone
    - service: mobile_app_user2_phone

# See https://www.home-assistant.io/integrations/input_datetime/
input_datetime:
  planned_opening:
    name: Automatic gate estimated time of arrival
    has_date: true
    has_time: true

# See https://www.home-assistant.io/integrations/input_boolean/
input_boolean:
  smart_gate:
    name: Smart gate
    icon: mdi:car-connected

# See https://www.home-assistant.io/integrations/waze_travel_time/
# Frontend only
waze:
  user0_travel_time:
  user1_travel_time:
  user2_travel_time:

# See https://www.home-assistant.io/integrations/proximity
# Frontend only
proximity:
  nearest_device:
  distance_user0:
  distance_user1:
  distance_user2:

# See https://www.home-assistant.io/integrations/template/
# Sensor to combine both my first car connected through Android Auto, and my second car connected via Bluetooth
template:
  - binary_sensor:
      - name: "user0 driving"
        unique_id: "user0_driving"
        icon: mdi:steering
        device_class:  moving
        state: >
          {{ states['binary_sensor.user0_android_auto'].state == 'on'
              or '00:00:00:00:00:00 (BT-Device)' in state_attr('sensor.user0_bluetooth_connection', 'connected_paired_devices') }}

  - binary_sensor:
      - name: "user1 driving"
        unique_id: "user1_driving"
        icon: mdi:steering
        device_class:  moving
        state: >
          {{ states['binary_sensor.user1_android_auto'].state == 'on'
              or '00:00:00:00:00:00 (BT-Device)' in state_attr('sensor.user1_bluetooth_connection', 'connected_paired_devices') }}

  - binary_sensor:
      - name: "user2 driving"
        unique_id: "user2_driving"
        icon: mdi:steering
        device_class:  moving
        state: >
          {{ states['binary_sensor.user2_android_auto'].state == 'on'
              or '00:00:00:00:00:00 (BT-Device)' in state_attr('sensor.user2_bluetooth_connection', 'connected_paired_devices') }}
